name: 'Terraform'

on:
  push:
    branches:
      - main
  pull_request:
    
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      - name: Terraform Format
        id: fmt
        working-directory: 'terraform'
        run: terraform fmt
        
      - name: Terraform Init
        id: init
        working-directory: 'terraform'
        run: terraform init
      
      - name: Terraform Plan
        id: plan
        working-directory: 'terraform'
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true
      
      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`${process.env.PLAN}\`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
            
      - name: Terraform Plan Status
        working-directory: 'terraform'
        if: steps.plan.outcome == 'failure'
        run: exit 1
        
      - name: Terraform Apply
        working-directory: 'terraform'
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve

      - name: Terraform Output
        working-directory: 'terraform'
        id: output
        run: terraform output > ../terraform.log

      - name: Upload actifacts
        uses: actions/upload-artifact@v2
        with:
          name: terraform
          path: terraform.log
